{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","componentes/Gasto.js","componentes/Listado.js","helper.js","componentes/Presupuesto.js","componentes/Restante.js","componentes/ControlPresupuesto.js","componentes/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","titulo","FormularioGasto","nombreGasto","React","createRef","cantidadGasto","crearGasto","e","preventDefault","gasto","_this","current","value","agregarGasto","target","reset","onSubmit","this","className","type","placeholder","ref","Component","Gasto","_this$props$gasto","Listado","Object","keys","gastos","map","key","componentes_Gasto","validarPresupuesto","presupuesto","totalPresupuesto","parseInt","Presupuesto","Restante","restante","p","r","ControlPresupuesto","Fragment","componentes_Presupuesto","componentes_Restante","App","state","objectSpread","concat","Date","now","restarPresupuesto","setState","cantidad","restar","Number","obtenerPresupuesto","prompt","componentes_Header","Formulario","componentes_Listado","componentes_ControlPresupuesto","Boolean","window","location","hostname","match","ReactDOM","render","componentes_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cb052300.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = props => {\r\n    return(\r\n        <header>\r\n            <h1>{props.titulo}</h1>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FormularioGasto extends React.Component{\r\n    nombreGasto = React.createRef();\r\n    cantidadGasto = React.createRef();\r\n\r\n    crearGasto = (e) => {\r\n        e.preventDefault();\r\n        const gasto= {\r\n            nombreGasto: this.nombreGasto.current.value,\r\n            cantidadGasto: this.cantidadGasto.current.value\r\n        }\r\n        this.props.agregarGasto(gasto);\r\n        e.target.reset();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <form onSubmit={this.crearGasto}>\r\n                <h2>Agrega tus gastos aqui</h2>\r\n                <div className=\"campo\">\r\n                    <label>Nombre Gasto</label>\r\n                    <input className=\"u-full-width\" type=\"text\" placeholder=\"Ej. Transporte\" ref={this.nombreGasto}/>\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Cantidad</label>\r\n                    <input className=\"u-full-width\" type=\"text\" placeholder=\"Ej. 300\" ref={this.cantidadGasto}/>\r\n                </div>\r\n\r\n                <input className=\"button-primary u-full-width\" type=\"submit\" value=\"Agregar\" />\r\n            </form>\r\n            );\r\n    }\r\n}\r\n\r\nFormularioGasto.propTypes = {\r\n    agregarGasto: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FormularioGasto;\r\n","import  React from 'react';\r\n\r\nclass Gasto extends React.Component{\r\n    render (){\r\n        const {nombreGasto, cantidadGasto} = this.props.gasto;\r\n        return (\r\n            <li className=\"gastos\">\r\n                <p>\r\n                    {nombreGasto}\r\n                    <span className=\"gasto\">$ {cantidadGasto}</span>\r\n                </p>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Gasto;\r\n","import React, {Component} from 'react';\r\nimport Gasto from './Gasto';\r\n\r\nclass Listado extends Component{\r\n    render (){\r\n        return(\r\n            <div className=\"gastos-realizados\">\r\n                <h2>Listado</h2>\r\n                {Object.keys(this.props.gastos).map(key => (\r\n                    <Gasto key={key} gasto={this.props.gastos[key]}/>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Listado;\r\n","export const validarPresupuesto = presupuesto => {\r\n    let totalPresupuesto = parseInt(presupuesto, 10) || 0;\r\n\r\n    if (totalPresupuesto > 0) {\r\n        return totalPresupuesto;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const revisarPresupuesto = (presupuesto, restante) => {\r\n    let clase;\r\n    // Comprobar el 25% \r\n    if ((presupuesto / 4) > restante) {\r\n        clase = 'alert alert-danger';\r\n    } else if ((presupuesto / 2) > restante) {\r\n        clase = 'alert alert-warning'\r\n    } else {\r\n        clase = 'alert alert alert-success';\r\n    }\r\n    return clase;\r\n}","import React from 'react';\r\n\r\nclass Presupuesto extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"alert alert-primary\">\r\n                Presupuesto: $ { this.props.presupuesto }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Presupuesto;","import  React  from 'react';\r\nimport {revisarPresupuesto} from './../helper'\r\n\r\nclass Restante extends React.Component{\r\n    render(){\r\n        const p = this.props.presupuesto;\r\n        const r = this.props.restante;\r\n        return(\r\n            <div className={revisarPresupuesto(p,r)}>\r\n                Restante: $ { this.props.restante }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Restante;","import  React  from 'react';\r\nimport Presupuesto from './Presupuesto';\r\nimport Restante from './Restante';\r\n\r\nclass ControlPresupuesto extends React.Component{\r\n    render(){\r\n       return( \r\n            <React.Fragment>\r\n                <Presupuesto presupuesto={this.props.presupuesto}/>\r\n                <Restante restante={this.props.restante} presupuesto={this.props.presupuesto}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ControlPresupuesto;","import React, { Component } from 'react';\nimport '../css/App.css'\nimport Header from './Header';\nimport FormularioGasto from './Formulario';\nimport Listado from './Listado';\nimport { validarPresupuesto } from './../helper';\nimport ControlPresupuesto from './ControlPresupuesto';\n\nclass App extends Component {\n  \n  state = {\n    presupuesto: '',\n    restante: '',\n    gastos: {}\n  }\n\n  agregarGasto = gasto => {\n    const gastos = {...this.state.gastos};\n    gastos[`gasto${Date.now()}`] = gasto;\n\n    this.restarPresupuesto(gasto.cantidadGasto);\n\n    this.setState({\n      gastos\n    });\n  }\n  restarPresupuesto = cantidad => {\n    let restar = Number(cantidad);\n    let restante = this.state.restante;\n    restante -= restar;\n    this.setState({\n      restante\n    });\n  };\n  componentDidMount(){\n    this.obtenerPresupuesto();\n  }\n\n  obtenerPresupuesto = () =>{\n    let presupuesto = prompt('cual es el presupuesto?');\n    let resultado = validarPresupuesto(presupuesto);\n    if (resultado){\n      this.setState({\n        presupuesto,\n        restante: presupuesto\n      })\n    }else{\n      this.obtenerPresupuesto();\n    }\n  }\n\n  \n  render() {\n    return (\n      <div className=\"App container\">\n       <Header titulo=\"Gasto Semanal\"/>\n       <div className=\"contenido-principal contenido\">\n        <div className=\"row\">\n          <div className=\"one-half column\">\n          <FormularioGasto agregarGasto={this.agregarGasto}/>\n          </div>\n          <div className=\"one-half column\">\n            <Listado gastos={this.state.gastos}/>\n            <ControlPresupuesto presupuesto={this.state.presupuesto}\n            restante={this.state.restante}/>\n          </div>\n        </div>\n      </div>\n      </div>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './componentes/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}